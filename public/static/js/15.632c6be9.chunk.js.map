{"version":3,"sources":["shared/component/UIElements/Avatar.js","users/components/FriendshipLable.js","users/components/UserItem.js","users/components/UsersList.js","users/pages/Users.js","shared/component/formElements/Button.js","shared/component/UIElements/ErrorModal.js","shared/component/UIElements/Modal.js","shared/component/UIElements/Card.js"],"names":["Avatar","image","alt","style","className","width","src","height","FriendshipLable","styled","Card","background","border","font","borderRadius","boxShadow","color","padding","StyledComponents","props","children","UserItem","user","userData","auth","sendFriendRequestHandler","useHttpClient","isLoading","error","sendRequest","clearError","id","name","places","message","useContext","MessageContext","FriendButton","isFriend","friends","filter","friend","hasRequest","friendRequests","req","sendFriendRequest","a","process","JSON","stringify","friendId","Authorization","token","console","isLoggedIn","length","variant","isSent","userId","Button","onClick","MessageButton","history","useHistory","getMessages","corresponderId","resData","messagesData","messages","push","textedUser","ErrorModal","onClear","to","UsersList","items","Grid","container","item","md","Typography","textAlign","Fragment","notAuth","_id","map","key","useStyles","makeStyles","theme","root","display","alignItems","input","marginLeft","spacing","flex","iconButton","centerd","justifyContent","end","selectStyle","Users","usersContext","UsersContext","users","setSortBy","getUsers","totalPages","currentPage","setCurrentPage","classes","useState","searchValue","setSearchValue","menuItemValue","setMenuItemValue","AuthContext","LoadingSpinner","Container","maxWidth","xs","sm","Select","onChange","event","target","value","defaultValue","MenuItem","disabled","Paper","component","onSubmit","e","preventDefault","InputBase","placeholder","inputProps","IconButton","type","aria-label","Pagination","count","page","href","size","inverse","danger","exact","header","onCancel","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","in","mountOnEnter","unmountOnExit","timeout","classNames"],"mappings":"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","file":"static/js/15.632c6be9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Avatar.css\";\r\n\r\nconst Avatar = ({ image, alt, style, className, width }) => {\r\n  return (\r\n    <div className={`avatar ${className}`} style={style}>\r\n      <img src={image} alt={alt} style={{ width: width, height: width }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport { styled } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/card\";\r\n\r\nconst FriendshipLable = styled(Card)({\r\n  background: \"#ff0055\",\r\n  border: 0,\r\n  font: \"inherit\",\r\n  borderRadius: 3,\r\n  boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n  color: \"white\",\r\n  height: 40,\r\n  width: 175,\r\n  padding: \"10px\",\r\n});\r\n\r\nexport default function StyledComponents(props) {\r\n  return <FriendshipLable>{props.children}</FriendshipLable>;\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from \"../../shared/component/UIElements/Avatar\";\r\nimport Card from \"../../shared/component/UIElements/Card\";\r\nimport \"./UserItem.css\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FriendshipLable from \"./FriendshipLable\";\r\nimport { MessageContext } from \"../../shared/context/message-context\";\r\n\r\nconst UserItem = ({ user, userData, auth, sendFriendRequestHandler }) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const { id, image, name, places } = user;\r\n  const message = useContext(MessageContext);\r\n\r\n  const FriendButton = () => {\r\n    const isFriend = userData.friends\r\n      ? userData.friends.filter((friend) => {\r\n          return friend.id === id;\r\n        })\r\n      : [];\r\n    const hasRequest = userData.friendRequests\r\n      ? userData.friendRequests.filter((req) => req.user.id === id)\r\n      : [];\r\n\r\n    const sendFriendRequest = async (id) => {\r\n      try {\r\n        await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/user/friends`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            friendId: id,\r\n          }),\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        );\r\n        sendFriendRequestHandler(id);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    if (auth.isLoggedIn) {\r\n      if (isFriend.length > 0) {\r\n        return (\r\n          <FriendshipLable variant=\"contained\" color=\"secondary\">\r\n            FRIEND\r\n          </FriendshipLable>\r\n        );\r\n      }\r\n\r\n      if (hasRequest.length > 0) {\r\n        if (hasRequest[0].isSent) {\r\n          return <FriendshipLable>Requested</FriendshipLable>;\r\n        } else {\r\n          return (\r\n            <FriendshipLable variant=\"contained\" color=\"secondary\">\r\n              Friend request\r\n            </FriendshipLable>\r\n          );\r\n        }\r\n      }\r\n\r\n      if (id === userData.userId) {\r\n        return <></>;\r\n      }\r\n\r\n      return (\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => sendFriendRequest(id)}>\r\n          Add Friend\r\n        </Button>\r\n      );\r\n    }\r\n    return <></>;\r\n  };\r\n\r\n  // Private messages\r\n  const MessageButton = () => {\r\n    const history = useHistory();\r\n\r\n    const getMessages = async () => {\r\n      const corresponderId = user.id;\r\n      try {\r\n        const resData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/user/messages/${corresponderId}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n          },\r\n        );\r\n        message.messagesData = resData.messages;\r\n        message.id = corresponderId;\r\n        history.push(`/${auth.userId}/messages`);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    return (\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          getMessages();\r\n          message.textedUser = name;\r\n        }}\r\n      >\r\n        Message\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <li className=\"user-item\">\r\n        <Card className=\"user-item__content\">\r\n          <Link className=\"user-holder\" to={`/${id}/places`}>\r\n            <div className=\"user-item__image\">\r\n              <Avatar image={image} alt={name} />\r\n            </div>\r\n            <div className=\"user-item__info\">\r\n              <h2>{name}</h2>\r\n              <h3>\r\n                {places.length} {places.length === 1 ? \"Place\" : \"Places\"}\r\n              </h3>\r\n            </div>\r\n          </Link>\r\n          {auth.isLoggedIn && (\r\n            <div className=\"user-item__icon\">\r\n              <Link to={`/${id}/bucketlist`}>\r\n                <img src=\"/images/bucketicon.png\" style={{ width: \"100%\" }} alt=\"\" />\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </Card>\r\n        {!isLoading && userData && id !== auth.userId && (\r\n          <div className=\"flex\">\r\n            <FriendButton />\r\n            <MessageButton />\r\n          </div>\r\n        )}\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\nimport UserItem from \"./UserItem\";\r\n\r\n// import Card from \"../../shared/component/UIElements/Card\";\r\nimport { Grid, Card, Typography } from \"@material-ui/core\";\r\nimport \"./UsersList.css\";\r\nimport \"./UserItem.css\";\r\n\r\nconst UsersList = ({ items, userData, auth, sendFriendRequestHandler }) => {\r\n  if (items.length === 0) {\r\n    return (\r\n      <Grid container>\r\n        <Grid item md={12}>\r\n          <Card>\r\n            <Typography style={{ textAlign: \"center\" }} variant=\"h6\">\r\n              No users found\r\n            </Typography>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <ul className=\"users-list users-mobile\">\r\n        {items\r\n          .filter((notAuth) => notAuth._id !== auth.userId)\r\n          .map((user) => (\r\n            <UserItem\r\n              user={user}\r\n              auth={auth}\r\n              userData={userData}\r\n              sendFriendRequestHandler={sendFriendRequestHandler}\r\n              key={user.id}\r\n            />\r\n          ))}\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useState, useContext, Fragment } from \"react\";\r\nimport UsersList from \"../components/UsersList\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport UsersContext from \"../../shared/context/users/usersContext\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { Select, MenuItem } from \"@material-ui/core\";\r\n\r\nimport { InputBase, Paper, IconButton, Grid, Container } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 5,\r\n  },\r\n  centerd: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  end: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  selectStyle: {\r\n    background: \"white\",\r\n    width: \"100%\",\r\n    padding: \"4px\",\r\n    borderRadius: \"4px\",\r\n  },\r\n}));\r\n\r\nconst Users = () => {\r\n  const usersContext = useContext(UsersContext);\r\n  const {\r\n    isLoading,\r\n    error,\r\n    clearError,\r\n    users,\r\n    user,\r\n    setSortBy,\r\n    sendFriendRequestHandler,\r\n    getUsers,\r\n    totalPages,\r\n    currentPage,\r\n    setCurrentPage,\r\n  } = usersContext;\r\n  const classes = useStyles();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [menuItemValue, setMenuItemValue] = useState();\r\n  const auth = useContext(AuthContext);\r\n\r\n  //sort users on selected option below\r\n  const sortByNameCountDate = (event) => {\r\n    const menuItemValue = event.target.value;\r\n    if (menuItemValue === \"name\") setSortBy(\"name\");\r\n    if (menuItemValue === \"placesCount\") setSortBy(\"-placesCount\");\r\n    if (menuItemValue === \"registration\") setSortBy(\"-created_at\");\r\n    setMenuItemValue(menuItemValue);\r\n  };\r\n  const onSubmitSearchHandler = (e) => {\r\n    e.preventDefault();\r\n    getUsers(searchValue);\r\n  };\r\n  const inputSearchHandler = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const handleChange = (event, value) => {\r\n    setCurrentPage(value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && users && (\r\n        <Container maxWidth=\"md\">\r\n          <Grid className={classes.centerd} container spacing={3}>\r\n            <Grid item md={3} xs={12} sm={3}>\r\n              <Select\r\n                onChange={sortByNameCountDate}\r\n                defaultValue=\"none\"\r\n                className={classes.selectStyle}\r\n                value={menuItemValue}\r\n              >\r\n                <MenuItem value=\"none\" disabled>\r\n                  Sort by\r\n                </MenuItem>\r\n                <MenuItem value=\"name\">Name</MenuItem>\r\n                <MenuItem value=\"placesCount\">Places Count</MenuItem>\r\n                <MenuItem value=\"registration\">Registration Date</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item md={3} xs={12} sm={3}>\r\n              <Paper component=\"form\" className={classes.root} onSubmit={onSubmitSearchHandler}>\r\n                <InputBase\r\n                  className={classes.input}\r\n                  placeholder=\"Search\"\r\n                  inputProps={{ \"aria-label\": \"\" }}\r\n                  value={searchValue}\r\n                  onChange={inputSearchHandler}\r\n                />\r\n                <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              </Paper>\r\n            </Grid>\r\n            <UsersList\r\n              items={users}\r\n              userData={user}\r\n              auth={auth}\r\n              sendFriendRequestHandler={sendFriendRequestHandler}\r\n            />\r\n          </Grid>\r\n\r\n          <Pagination\r\n            className={classes.centerd}\r\n            color=\"secondary\"\r\n            count={totalPages}\r\n            page={currentPage}\r\n            onChange={handleChange}\r\n          />\r\n        </Container>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = (props) => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${\r\n          props.inverse && 'button--inverse'\r\n        } ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${\r\n          props.inverse && 'button--inverse'\r\n        } ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${\r\n        props.inverse && 'button--inverse'\r\n      } ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n      id={props.id}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport Button from \"../formElements/Button\";\r\n\r\nconst ErrorModal = ({ error, onClear, header }) => {\r\n  return (\r\n    <Modal\r\n      onCancel={onClear}\r\n      header={header || \"An Error Occurred!!!\"}\r\n      show={!!error}\r\n      footer={<Button onClick={onClear}>Okay</Button>}\r\n    >\r\n      <div>{error}</div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Backdrop from \"./Backdrop\";\r\nconst Modal = props => {\r\n  return (\r\n    <Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames='modal'\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </Fragment>\r\n  );\r\n};\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={props.onSubmit ? props.onSubmit : e => e.preventDefault()}\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"sourceRoot":""}