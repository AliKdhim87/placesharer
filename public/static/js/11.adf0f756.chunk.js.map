{"version":3,"sources":["places/components/CommentForm.js","places/components/Comment.js","places/components/CommentList.js","places/pages/Comments.js","places/components/PlaceItemView.js","places/pages/Place.js"],"names":["CommentForm","addComment","placeId","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useFrom","title","value","isValid","comment","state","inputHandler","setFormData","submitHandler","event","a","preventDefault","process","JSON","stringify","inputs","Authorization","token","data","createComment","className","ErrorModal","onClear","LoadingSpinner","onSubmit","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","VALIDATOR_MINLENGTH","Button","disabled","Comment","props","useState","editMode","setEditMode","_id","creator","date","hasRight","userId","useParams","deleteComment","removeComment","updateComment","handleIt","console","log","d1","Date","toLocaleDateString","initailValue","initailValid","style","border","color","backgroundColor","marginBottom","marginLeft","padding","toLocaleString","formatDate","name","margin","onClick","currentMode","CommentList","comments","width","length","Fragment","map","key","Comments","setComments","useEffect","commentsData","getComments","currentComments","commentId","filter","c","PlaceItemView","place","image","address","description","Card","src","imageUrl","alt","Place","setPlace","placeData","getPlace","display","flexDirection","Object","keys"],"mappings":"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","file":"static/js/11.adf0f756.chunk.js","sourcesContent":["import React, { useContext, Fragment } from 'react';\r\nimport Input from '../../shared/component/formElements/Input';\r\nimport Button from '../../shared/component/formElements/Button';\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/Util/validators';\r\nimport useHttpClient from '../../shared/hooks/http-hook';\r\nimport { useFrom } from '../../shared/hooks/form-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport ErrorModal from '../../shared/component/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/component/UIElements/LoadingSpinner';\r\n\r\nimport './CommentForm.css';\r\n\r\nexport default function CommentForm({addComment, placeId}) {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [state, inputHandler, setFormData] = useFrom(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      comment: {\r\n        value: '',\r\n        isValid: false,\r\n      }\r\n    },\r\n    false\r\n  );\r\n  const submitHandler = async event => {\r\n    event.preventDefault();\r\n    const createComment = async () => {\r\n      try {\r\n        const data = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}/comments`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            title: state.inputs.title.value,\r\n            comment: state.inputs.comment.value\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token\r\n          }\r\n        );\r\n        addComment(data.comment);\r\n        setFormData(    \r\n          {\r\n            title: {\r\n              value: '',\r\n              isValid: false,\r\n            },\r\n            comment: {\r\n              value: '',\r\n              isValid: false,\r\n            }\r\n          },\r\n          false\r\n        )\r\n      } catch (error) {}\r\n    };\r\n    createComment();\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-form-container\">\r\n      <Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && <LoadingSpinner/>}\r\n        <form className='comment-form' onSubmit={submitHandler}>\r\n          <Input\r\n            id='title'\r\n            element='input'\r\n            type='text'\r\n            label='Title'\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText='Please enter a valid title.'\r\n            onInput={inputHandler}\r\n            initialValue={state.inputs.title.value}\r\n          />\r\n          <Input\r\n            id='comment'\r\n            element='textarea'\r\n            label='Message'\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText='Please enter a valid message (min. 5 characters).'\r\n            onInput={inputHandler}\r\n            initialValue={state.inputs.comment.value}\r\n          />\r\n          <Button type='submit' disabled={!state.isValid}>\r\n            GO FOR IT!\r\n          </Button>\r\n        </form>\r\n      </Fragment>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Input from \"../../shared/component/formElements/Input\";\r\nimport Button from \"../../shared/component/formElements/Button\";\r\nimport { useFrom } from \"../../shared/hooks/form-hook\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from \"../../shared/Util/validators\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./Comment.css\";\r\n\r\nexport default function Comment(props) {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const { _id, creator, title, comment, date } = props.comment;\r\n  const { sendRequest } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const hasRight =\r\n    creator && auth && auth.userId && creator._id === auth.userId;\r\n  const placeId = useParams().placeId;\r\n  const [state, inputHandler] = useFrom(\r\n    {\r\n      title: {\r\n        value: title,\r\n        isValid: false\r\n      },\r\n      comment: {\r\n        value: comment,\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const deleteComment = async () => {\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}/comments/${_id}`,\r\n        \"DELETE\",\r\n        null,\r\n        { Authorization: `Bearer ${auth.token}` }\r\n      );\r\n      props.removeComment(_id);\r\n    } catch {}\r\n  };\r\n\r\n  const editComment = () => {\r\n    setEditMode(currentMode => !currentMode);\r\n  };\r\n\r\n  const submitHandler = async event => {\r\n    event.preventDefault();\r\n    const handleIt = async () => {\r\n      try {\r\n        const comment = {\r\n          title: state.inputs.title.value,\r\n          comment: state.inputs.comment.value\r\n        };\r\n        await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}/comments/${_id}`,\r\n          \"PATCH\",\r\n          JSON.stringify(comment),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token\r\n          }\r\n        );\r\n        props.updateComment(_id, comment);\r\n        setEditMode(false);\r\n      } catch (error) {}\r\n    };\r\n    handleIt();\r\n  };\r\n  console.log(date);\r\n  console.log(typeof date)\r\n  const d1= new Date(date);\r\n  d1.toLocaleDateString('en-US')\r\n  console.log(d1)\r\n\r\n  const formatDate = date=>{\r\n    const d1= new Date(date);\r\n    return d1.toLocaleString('en-NL')\r\n  }\r\n  return (\r\n    <div>\r\n      {!editMode ? (\r\n        <div\r\n          style={{\r\n            border: \"1px solid #008cff\",\r\n            color: \"black\",\r\n            backgroundColor: \"white\",\r\n            marginBottom: \"10px\",\r\n            marginLeft: \"10px\",\r\n            padding: \"10px\"\r\n          }}\r\n        >\r\n          <h5>{title}</h5>\r\n          <p>{comment}</p>\r\n          <p>\r\n            <strong>Date:</strong> {formatDate(date)}\r\n          </p>\r\n          <p>\r\n            <strong>From Whom:</strong> {creator ? creator.name : null}\r\n          </p>\r\n          {hasRight && (\r\n            <button\r\n              className=\"edit-delete-button\"\r\n              style={{ margin: \"10px\" }}\r\n              type=\"button\"\r\n              onClick={deleteComment}\r\n            >\r\n              Delete\r\n            </button>\r\n          )}\r\n          {hasRight && (\r\n            <button\r\n              className=\"edit-delete-button\"\r\n              type=\"button\"\r\n              onClick={editComment}\r\n            >\r\n              Edit\r\n            </button>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <form className=\"comment-update-form\" onSubmit={submitHandler}>\r\n            <Input\r\n              id=\"title\"\r\n              element=\"input\"\r\n              type=\"text\"\r\n              label=\"Title\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a valid title.\"\r\n              onInput={inputHandler}\r\n              initailValue={title}\r\n              initailValid={true}\r\n            />\r\n            <Input\r\n              id=\"comment\"\r\n              element=\"textarea\"\r\n              label=\"Message\"\r\n              validators={[VALIDATOR_MINLENGTH(5)]}\r\n              errorText=\"Please enter a valid message (min. 5 characters).\"\r\n              onInput={inputHandler}\r\n              initailValue={comment}\r\n              initailValid={true}\r\n            />\r\n            <Button type=\"submit\" disabled={!state.isValid}>\r\n              SAVE\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Comment from \"./Comment\";\r\n\r\nexport default function CommentList({comments, removeComment, updateComment}) {\r\n  return (\r\n    <div style={{width:\"100%\"}}>\r\n      {comments && comments.length > 0 ? \r\n        <React.Fragment>\r\n          <h5 style={{color:\"white\", \r\n         }}>\r\n            <span>{comments.length}</span>{\" \"}\r\n            Comment{comments.length === 1 ? \" \" : \"s\"}\r\n          </h5>\r\n          {comments.map((comment) => (\r\n            <Comment key={comment._id} comment={comment} removeComment={removeComment} updateComment={updateComment}/>\r\n          ))}\r\n        </React.Fragment>\r\n      : <div className=\"comment-list\">Be the first to comment</div>}\r\n    </div>\r\n  );\r\n}","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport CommentForm from \"../components/CommentForm\";\r\nimport CommentList from \"../components/CommentList\";\r\n\r\nexport default function Comments({placeId}) {\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [comments, setComments] = useState();\r\n\r\n    useEffect(() => {\r\n        const getComments = async () => {\r\n            try {\r\n                const commentsData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}/comments`);\r\n                setComments(commentsData.comments);\r\n            } catch {}\r\n        };\r\n        getComments();\r\n    }, [placeId]);\r\n\r\n    const addComment = (comment) =>{\r\n        setComments(currentComments => [...currentComments, comment]);\r\n    }\r\n\r\n    const removeComment = (commentId) =>{\r\n        setComments(currentComments => currentComments.filter(comment => comment._id !== commentId));\r\n    }\r\n\r\n    const updateComment = (id, comment)=>{\r\n        setComments(currentComments => currentComments.map(c=>{\r\n            if(c._id === id){\r\n                const newComment = {_id: id, creator: {...c.creator}, title: comment.title, comment: comment.comment};\r\n                return newComment;\r\n            }\r\n            return c;\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"center flex-column width-60\">\r\n            {isLoading && <LoadingSpinner /> }\r\n            <ErrorModal error={error} onClear={clearError} />   \r\n            <CommentForm addComment={addComment} placeId={placeId} className=\"width-60\"/>         \r\n            {!isLoading && <CommentList removeComment={removeComment} updateComment={updateComment} comments={comments}/>}     \r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./PlaceItem.css\";\r\nimport Card from \"../../shared/component/UIElements/Card\";\r\n\r\nconst PlaceItemView = (props) => {\r\n  const {name, image, title, address, description} = props.place;\r\n  return (\r\n    <div className=\"place-item\">\r\n      <Card className=\"place-item__content detailed-view\">\r\n\r\n        <div className=\"place-item__image\">\r\n          <img src={image.imageUrl} alt={name} />\r\n        </div>\r\n        <div className=\"place-item__info\">\r\n          <h2>{title}</h2>\r\n          <h3>{address}</h3>\r\n          <p>{description}</p>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaceItemView;\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport {useParams} from \"react-router-dom\";\r\nimport Comments from \"./Comments\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport PlaceItemView from \"../components/PlaceItemView\";\r\n\r\nexport default function Place() {\r\n    const [place, setPlace] = useState({});\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const placeId = useParams().placeId;\r\n\r\n    useEffect(() => {\r\n        const getPlace = async () => {\r\n            try {\r\n                const placeData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`);\r\n                setPlace(placeData.place);\r\n            } catch {}\r\n        };\r\n        getPlace();   \r\n    }, [sendRequest, placeId])\r\n\r\n    return (\r\n        <div className=\"center\" style={{display:\"flex\", flexDirection:\"column\"}}>\r\n            {isLoading && <LoadingSpinner /> }\r\n            <ErrorModal error={error} onClear={clearError} />            \r\n            {!isLoading && place && Object.keys(place).length > 0 && <PlaceItemView place={place} />} \r\n            <Comments placeId={placeId}/>    \r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}