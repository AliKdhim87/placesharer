{"version":3,"sources":["shared/component/formElements/Input.js","shared/hooks/form-hook.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/component/UIElements/Avatar.js","users/components/MessageItem.js","users/pages/Messages.js","shared/component/formElements/Button.js","shared/component/UIElements/ErrorModal.js","shared/component/UIElements/Card.js","shared/component/UIElements/Modal.js","shared/Util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"names":["inputReducer","state","action","type","value","val","isValid","validate","validators","isTouched","Input","props","changeHandeler","event","dispatch","target","touchHandler","inaialState","initailValue","initailValid","useReducer","id","onInput","useEffect","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useFrom","initailInput","initailFormValidity","useCallback","inputData","formValidity","_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","i","F","s","n","length","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","Avatar","image","alt","style","width","src","height","MessageItem","msg","messageDeleteHandler","getUserMessages","message","contacts","useContext","MessageContext","sendRequest","useHttpClient","token","AuthContext","delMessage","userId","msgId","a","process","Authorization","formatDate","date","Date","toLocaleString","key","_id","isSent","onClick","Messages","useState","setContacts","isLoading","error","clearError","messagesData","allMessages","setAllMessages","mobileContactMode","setMobileContactMode","textedUser","setTextedUser","myScrollRef","useRef","scrollToBottom","current","scrollIntoView","behavior","inputHandler","fetchContacts","data","corresponders","sendMessage","preventDefault","corresponderId","messageValue","JSON","stringify","res","messageId","console","fetchedMessages","messages","dltCorresponder","filteredContacts","filter","contact","log","deletedMsgId","prevAllMessages","Fragment","LoadingSpinner","asOverlay","ErrorModal","onClear","Card","map","corresponder","name","to","ref","onSubmit","VALIDATOR_REQUIRE","Button","href","size","inverse","danger","children","exact","disabled","header","onCancel","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","in","mountOnEnter","unmountOnExit","timeout","classNames","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","validator","trim","test","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"mappings":"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","file":"static/js/10.adf37027.chunk.js","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\r\nimport { validate } from \"../../Util/validators\";\r\nimport \"./Input.css\";\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const changeHandeler = event => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n  const touchHandler = event => {\r\n    dispatch({ type: \"TOUCH\" });\r\n  };\r\n  const inaialState = {\r\n    value: props.initailValue || \"\",\r\n    isValid: props.initailValid || false,\r\n    isTouched: false,\r\n  };\r\n  const [state, dispatch] = useReducer(inputReducer, inaialState);\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = state;\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandeler}\r\n        onBlur={touchHandler}\r\n        value={state.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandeler}\r\n        onBlur={touchHandler}\r\n        value={state.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div className={`form-control ${!state.isValid && state.isTouched && \"form-control--invalid\"}`}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!state.isValid && state.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        ...state,\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useFrom = (initailInput, initailFormValidity) => {\r\n  const [state, dispatch] = useReducer(formReducer, {\r\n    inputs: initailInput,\r\n    isValid: initailFormValidity\r\n  });\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n  return [state, inputHandler, setFormData];\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from \"react\";\r\n\r\nimport \"./Avatar.css\";\r\n\r\nconst Avatar = ({ image, alt, style, className, width }) => {\r\n  return (\r\n    <div className={`avatar ${className}`} style={style}>\r\n      <img src={image} alt={alt} style={{ width: width, height: width }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React, { useContext, Fragment } from \"react\";\r\nimport { MessageContext } from \"../../shared/context/message-context\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./MessageItem.css\";\r\n\r\nconst MessageItem = ({ msg, messageDeleteHandler, getUserMessages, contacts }) => {\r\n  const message = useContext(MessageContext);\r\n  const { sendRequest } = useHttpClient();\r\n  const { token } = useContext(AuthContext);\r\n\r\n  const delMessage = async (userId, msgId) => {\r\n    await sendRequest(\r\n      `${process.env.REACT_APP_BACKEND_URL}/user/messages/${userId}/${msgId}`,\r\n      \"DELETE\",\r\n      null,\r\n      {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    );\r\n\r\n    messageDeleteHandler(msgId);\r\n    getUserMessages(userId);\r\n  };\r\n  const formatDate = (date) => {\r\n    const d1 = new Date(date);\r\n    return d1.toLocaleString(\"en-NL\");\r\n  };\r\n\r\n  return (\r\n    <div key={msg._id} className={`mContainer ${msg.isSent ? \"myMsg\" : \"userMsg\"}`}>\r\n      <div className={`msgInfo ${msg.isSent ? \"toRyt\" : \"toLeft\"}`}>\r\n        {msg.isSent ? (\r\n          <Fragment>\r\n            <p>{formatDate(msg.date)}</p>\r\n\r\n            <button onClick={() => delMessage(message.id, msg._id)}>x</button>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <button onClick={() => delMessage(message.id, msg._id)}>x</button>\r\n            <p>{formatDate(msg.date)}</p>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n      <p>{msg.message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageItem;\r\n","import React, { useContext, useState, useEffect, useRef, useCallback } from \"react\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Card from \"../../shared/component/UIElements/Card\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport \"./Messages.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MessageContext } from \"../../shared/context/message-context\";\r\nimport Input from \"../../shared/component/formElements/Input\";\r\nimport { useFrom } from \"../../shared/hooks/form-hook\";\r\nimport { VALIDATOR_REQUIRE } from \"../../shared/Util/validators\";\r\nimport Button from \"../../shared/component/formElements/Button\";\r\nimport MessageItem from \"../components/MessageItem\";\r\nimport Avatar from \"../../shared/component/UIElements/Avatar\";\r\n\r\nconst Messages = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const { token } = useContext(AuthContext);\r\n  const message = useContext(MessageContext);\r\n  const [allMessages, setAllMessages] = useState(message.messagesData);\r\n  const [mobileContactMode, setMobileContactMode] = useState(true);\r\n  const [textedUser, setTextedUser] = useState(message.textedUser);\r\n\r\n  // scroll to the bottom of the messages box\r\n  const myScrollRef = useRef();\r\n  const scrollToBottom = () => {\r\n    myScrollRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const [state, inputHandler] = useFrom(\r\n    {\r\n      message: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false,\r\n  );\r\n\r\n  // fetching contacts (only texted ones not all users)\r\n  const fetchContacts = async () => {\r\n    try {\r\n      const data = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/messages`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      );\r\n      setContacts(data.corresponders);\r\n      scrollToBottom();\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchContacts();\r\n  }, [sendRequest, token, message.textedUser]);\r\n\r\n  // Send a message\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    const corresponderId = message.id;\r\n    const messageValue = state.inputs.message.value;\r\n    try {\r\n      const res = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/messages/${corresponderId}`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          message: messageValue,\r\n        }),\r\n        {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      );\r\n      setAllMessages([...allMessages, { message: messageValue, isSent: true, _id: res.messageId }]);\r\n      scrollToBottom();\r\n      getUserMessages(corresponderId);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Get all messages as per the texted person\r\n  const getUserMessages = async (id) => {\r\n    const corresponderId = id;\r\n\r\n    try {\r\n      // console.log(textedUser);\r\n      const fetchedMessages = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/messages/${corresponderId}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      );\r\n      fetchContacts();\r\n      setAllMessages(fetchedMessages.messages);\r\n\r\n      message.id = corresponderId;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Delete a corresponder\r\n  const dltCorresponder = async (id) => {\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/messages/${id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      );\r\n      const filteredContacts = contacts.filter((contact) => contact._id !== id);\r\n      setContacts(filteredContacts);\r\n      if (id === message.id) {\r\n        setTextedUser(\"\");\r\n        message.textedUser = \"\";\r\n      }\r\n      setAllMessages([]);\r\n      fetchContacts();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const messageDeleteHandler = (deletedMsgId) => {\r\n    setAllMessages((prevAllMessages) => prevAllMessages.filter((msg) => msg.id !== deletedMsgId));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <ErrorModal error={error} onClear={clearError} />\r\n\r\n      {!isLoading && (\r\n        <Card className=\"messages__card\">\r\n          {/* Contacts */}\r\n          <div\r\n            className={\r\n              mobileContactMode\r\n                ? `contacts__container contact__container-mobile`\r\n                : `contacts__container contact__container-hidden`\r\n            }\r\n          >\r\n            <h2 className=\"header\">Recent</h2>\r\n            <div className=\"contacts__box\">\r\n              {contacts.length > 0 &&\r\n                contacts.map((contact) => (\r\n                  <Card\r\n                    className=\"user-item__content\"\r\n                    key={contact.corresponder._id}\r\n                    className={`user-item__content ${\r\n                      message.id === contact.corresponder._id && \"activatedContact\"\r\n                    }`}\r\n                  >\r\n                    <div\r\n                      onClick={() => {\r\n                        getUserMessages(contact.corresponder._id);\r\n                        if (contact.corresponder) {\r\n                          setTextedUser(contact.corresponder.name);\r\n                          message.textedUser = contact.corresponder.name;\r\n                        }\r\n                        setMobileContactMode(false);\r\n                      }}\r\n                      className={`cardWidth`}\r\n                    >\r\n                      <div className=\"user-item__image m-1\">\r\n                        <Avatar\r\n                          image={contact.corresponder.image}\r\n                          alt={contact.corresponder.name}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"user-item__info m-1\">\r\n                      <h3>{contact.corresponder.name}</h3>\r\n                    </div>\r\n                    <button onClick={() => dltCorresponder(contact.corresponder._id)}>X</button>\r\n                  </Card>\r\n                ))}\r\n            </div>\r\n            <div className=\"innerBox\">\r\n              {contacts.length === 0 && (\r\n                <Link className=\"link-text\" to=\"/\">\r\n                  Text a user!\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Messages */}\r\n          <div\r\n            className={\r\n              mobileContactMode\r\n                ? `message__box message__box-hidden`\r\n                : `message__box message__box-mobile`\r\n            }\r\n          >\r\n            <h2 className=\"header\">{`Messages ${textedUser && `with ${textedUser}`}`}</h2>\r\n            <a\r\n              onClick={() => {\r\n                setMobileContactMode(true);\r\n              }}\r\n              className=\"mobile-hidden\"\r\n            >\r\n              BACK\r\n            </a>\r\n            <div className=\"msgsContainer\">\r\n              {allMessages.length > 0 ? (\r\n                allMessages.map((msg, i) => (\r\n                  <MessageItem\r\n                    key={i}\r\n                    msg={msg}\r\n                    messageDeleteHandler={messageDeleteHandler}\r\n                    getUserMessages={getUserMessages}\r\n                    contacts={contacts}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <div>Start a message!</div>\r\n              )}\r\n              <div ref={myScrollRef}></div>\r\n            </div>\r\n\r\n            <form onSubmit={sendMessage}>\r\n              <Input\r\n                id=\"message\"\r\n                element=\"input\"\r\n                type=\"text\"\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                errorText=\"Please enter your message\"\r\n                onInput={inputHandler}\r\n              />\r\n              <Button type=\"submit\">Send</Button>\r\n            </form>\r\n          </div>\r\n        </Card>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Messages;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport Button from \"../formElements/Button\";\r\n\r\nconst ErrorModal = ({ error, onClear, header }) => {\r\n  return (\r\n    <Modal\r\n      onCancel={onClear}\r\n      header={header || \"An Error Occurred!!!\"}\r\n      show={!!error}\r\n      footer={<Button onClick={onClear}>Okay</Button>}\r\n    >\r\n      <div>{error}</div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Backdrop from \"./Backdrop\";\r\nconst Modal = props => {\r\n  return (\r\n    <Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames='modal'\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </Fragment>\r\n  );\r\n};\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={props.onSubmit ? props.onSubmit : e => e.preventDefault()}\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nexport default Modal;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}