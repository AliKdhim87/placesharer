{"version":3,"sources":["shared/component/formElements/Input.js","shared/hooks/form-hook.js","shared/component/formElements/ImageUpload.js","users/pages/Auth.js","shared/component/formElements/Button.js","shared/component/UIElements/ErrorModal.js","shared/component/UIElements/Card.js","shared/component/UIElements/Modal.js","shared/Util/validators.js"],"names":["inputReducer","state","action","type","value","val","isValid","validate","validators","isTouched","Input","props","changeHandeler","event","dispatch","target","touchHandler","inaialState","initailValue","initailValid","useReducer","id","onInput","useEffect","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useFrom","initailInput","initailFormValidity","useCallback","inputData","formValidity","ImageUpload","pickedFile","center","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileIsValid","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","files","length","src","alt","onClick","current","click","Auth","auth","useContext","AuthContext","isLoginMod","setIsLoginMod","useHttpClient","isLoading","error","sendRequest","clearError","socialLogin","toggleSocialLogin","email","password","inputHandler","setFormData","authSubmitHandler","a","preventDefault","process","JSON","stringify","res","login","userId","token","friendStatus","formData","FormData","append","name","image","onClear","asOverlay","onSubmit","href","VALIDATOR_REQUIRE","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","disabled","to","inverse","undefined","prevMode","Button","size","danger","children","exact","ErrorModal","header","onCancel","show","footer","Card","ModalOverlay","content","headerClass","e","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","in","mountOnEnter","unmountOnExit","timeout","classNames","validator","trim","test"],"mappings":"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","file":"static/js/11.ecb23d05.chunk.js","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\r\nimport { validate } from \"../../Util/validators\";\r\nimport \"./Input.css\";\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const changeHandeler = event => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n  const touchHandler = event => {\r\n    dispatch({ type: \"TOUCH\" });\r\n  };\r\n  const inaialState = {\r\n    value: props.initailValue || \"\",\r\n    isValid: props.initailValid || false,\r\n    isTouched: false,\r\n  };\r\n  const [state, dispatch] = useReducer(inputReducer, inaialState);\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = state;\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandeler}\r\n        onBlur={touchHandler}\r\n        value={state.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandeler}\r\n        onBlur={touchHandler}\r\n        value={state.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div className={`form-control ${!state.isValid && state.isTouched && \"form-control--invalid\"}`}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!state.isValid && state.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        ...state,\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useFrom = (initailInput, initailFormValidity) => {\r\n  const [state, dispatch] = useReducer(formReducer, {\r\n    inputs: initailInput,\r\n    isValid: initailFormValidity\r\n  });\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n  return [state, inputHandler, setFormData];\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./ImageUpload.css\";\r\nimport Button from \"./Button\";\r\nconst ImageUpload = ({ id, center, onInput, errorText }) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n  const filePickerRef = useRef();\r\n  let pickedFile;\r\n  let fileIsValid = isValid;\r\n\r\n  useEffect(() => {\r\n    if (!file) return;\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    if (event.target.files || event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    onInput(id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => filePickerRef.current.click();\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        ref={filePickerRef}\r\n        id={id}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}{\" \"}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useState, useContext, Fragment } from \"react\";\r\n\r\nimport \"./Auth.css\";\r\nimport Input from \"../../shared/component/formElements/Input\";\r\nimport Button from \"../../shared/component/formElements/Button\";\r\nimport Card from \"../../shared/component/UIElements/Card\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/component/formElements/ImageUpload\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport { useFrom } from \"../../shared/hooks/form-hook\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/Util/validators\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n// React Icons\r\nimport { FaFacebookF, FaGoogle } from \"react-icons/fa\";\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMod, setIsLoginMod] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [socialLogin, toggleSocialLogin] = useState(true);\r\n\r\n  const [state, inputHandler, setFormData] = useFrom(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  const switchModelHandler = () => {\r\n    if (!isLoginMod) {\r\n      setFormData(\r\n        {\r\n          ...state.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        state.inputs.email.isValid && state.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...state.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMod((prevMode) => !prevMode);\r\n    toggleSocialLogin((socialLogin) => !socialLogin);\r\n  };\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMod) {\r\n      try {\r\n        const res = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: state.inputs.email.value,\r\n            password: state.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n\r\n        auth.login(res.userId, res.token, null, res.friendStatus);\r\n      } catch (error) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", state.inputs.email.value);\r\n        formData.append(\"password\", state.inputs.password.value);\r\n        formData.append(\"name\", state.inputs.name.value);\r\n        formData.append(\"image\", state.inputs.image.value);\r\n\r\n        const res = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n          \"POST\",\r\n          formData\r\n        );\r\n\r\n        auth.login(res.userId, res.token);\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication no-select\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {/* social login */}\r\n          {socialLogin && (\r\n            <div>\r\n              <h3>Log in with</h3>\r\n              <a\r\n                className=\"socialBtn\"\r\n                href={`${process.env.REACT_APP_BACKEND_URL}/users/facebook`}\r\n              >\r\n                <FaFacebookF />\r\n                <span className=\"socialName\">Facebook</span>\r\n              </a>\r\n              {/*  */}\r\n              <a\r\n                className=\"socialBtn\"\r\n                href={`${process.env.REACT_APP_BACKEND_URL}/users/google`}\r\n              >\r\n                <FaGoogle />\r\n                <span className=\"socialName\">Google</span>\r\n              </a>\r\n              <h3>______or______</h3>\r\n            </div>\r\n          )}\r\n          {!isLoginMod && (\r\n            <Input\r\n              id=\"name\"\r\n              element=\"input\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a valid name\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMod && (\r\n            <ImageUpload\r\n              center\r\n              id={\"image\"}\r\n              onInput={inputHandler}\r\n              errorText=\"Please provide an image\"\r\n            />\r\n          )}\r\n          <Input\r\n            id=\"email\"\r\n            element=\"input\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            isLoading\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            element=\"input\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 6 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!state.isValid}>\r\n            {isLoginMod ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n          {isLoginMod && <Button to=\"/forgetpassword\">FORGOT PASSWORD</Button>}\r\n        </form>\r\n        <Button inverse onClick={switchModelHandler}>\r\n          SWITCH TO {isLoginMod ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport Button from \"../formElements/Button\";\r\n\r\nconst ErrorModal = ({ error, onClear, header }) => {\r\n  return (\r\n    <Modal\r\n      onCancel={onClear}\r\n      header={header || \"An Error Occurred!!!\"}\r\n      show={!!error}\r\n      footer={<Button onClick={onClear}>Okay</Button>}\r\n    >\r\n      <div>{error}</div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Backdrop from \"./Backdrop\";\r\nconst Modal = props => {\r\n  return (\r\n    <Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames='modal'\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </Fragment>\r\n  );\r\n};\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={props.onSubmit ? props.onSubmit : e => e.preventDefault()}\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nexport default Modal;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"sourceRoot":""}