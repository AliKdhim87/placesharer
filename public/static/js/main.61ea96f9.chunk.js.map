{"version":3,"sources":["shared/context/auth-context.js","shared/context/users/usersContext.js","shared/hooks/http-hook.js","shared/component/UIElements/LoadingSpinner.js","shared/component/UIElements/Backdrop.js","shared/context/message-context.js","users/components/UserProfileNav.js","shared/hooks/auth-hook.js","shared/component/Navigation/MainHeader.js","shared/component/Navigation/SideDrawer.js","shared/component/Navigation/NavLinks.js","shared/component/Navigation/MainNavigation.js","users/pages/Social.js","shared/context/users/UsersState.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","token","userId","login","logout","usersContext","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","res","json","data","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","MessageContext","messagesData","id","textedUser","UserProfileNav","setDrawerOpen","useContext","to","logoutTimer","MainHeader","children","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","NavLinks","auth","user","UsersContext","drawerOpen","exact","Avatar","src","image","alt","name","style","margin","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","width","Social","URL","window","location","searchParams","get","uId","socialLog","UsersState","users","setUsers","setUser","processedUsers","setProcessedUsers","sortBy","setSortBy","totalPages","setTotalPages","currentPage","setCurrentPage","getUsers","searchValue","process","Authorization","userData","console","Provider","value","sendFriendRequestHandler","prevValue","Messages","React","lazy","ForgetPassword","ResetEmail","Auth","User","Users","Friends","NewPlace","UserPlaces","UpdatePlace","BucketList","Place","RegisterConfirmation","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","fallback","render"],"mappings":"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","file":"static/js/main.61ea96f9.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  token: null,\r\n  userId: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import { createContext } from \"react\";\r\nconst usersContext = createContext();\r\nexport default usersContext;\r\n","import { useState, useCallback, useRef, useEffect } from 'react';\r\nconst useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    setIsLoading(true);\r\n    const httpAbortCtrl = new AbortController();\r\n    activeHttpRequests.current.push(httpAbortCtrl);\r\n    try {\r\n      const res = await fetch(url, {\r\n        method,\r\n        body,\r\n        headers,\r\n        signal: httpAbortCtrl.signal,\r\n      });\r\n      const data = await res.json();\r\n      activeHttpRequests.current = activeHttpRequests.current.filter(\r\n        reqCtrl => reqCtrl !== httpAbortCtrl,\r\n      );\r\n      if (!res.ok) {\r\n        throw new Error(data.message);\r\n      }\r\n      setIsLoading(false);\r\n      return data;\r\n    } catch (error) {\r\n      setError(error.message || 'Something went wrong, please try again.');\r\n      setIsLoading(false);\r\n      throw error;\r\n    }\r\n  }, []);\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\nexport default useHttpClient;\r\n","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById('backdrop-hook')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import { createContext } from \"react\";\r\nexport const MessageContext = createContext({\r\n  messagesData: [], // to set all the messages involving the id below\r\n  id: \"\", // to set the texted person object id\r\n  textedUser: \"\",\r\n});\r\n","import React, { useContext, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./UserProfileNav.css\";\r\n\r\nconst UserProfileNav = ({ setDrawerOpen }) => {\r\n  const { userId } = useContext(AuthContext);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"dropdown-content\">\r\n        <Link onClick={() => setDrawerOpen(false)} className=\"navLink\" to={`/${userId}/bucketlist`}>\r\n          <span>My Bucket List</span>\r\n        </Link>\r\n        <Link onClick={() => setDrawerOpen(false)} className=\"navLink\" to={`/${userId}/my`}>\r\n          <span>Profile</span>\r\n        </Link>\r\n        <Link  onClick={() => setDrawerOpen(false)} className=\"navLink\" to={`/${userId}/friends`}>\r\n          <span>My Friends</span>\r\n        </Link>\r\n        <Link onClick={() => setDrawerOpen(false)} className=\"navLink\" to={`/${userId}/messages`}>\r\n          <span>Messages</span>\r\n        </Link>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserProfileNav;\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      }),\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n\r\n    localStorage.removeItem('userData');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\r\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n    }\r\n  }, [login]);\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = props => {\r\n  return <header className='main-header'>{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./SideDrawer.css\";\r\nconst SideDrawer = props => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames='slide-in-left'\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className='side-drawer' onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n  return ReactDOM.createPortal(\r\n    content,\r\n    document.getElementById(\"drawer-hooks\")\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useContext, useState, Fragment } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport \"./NavLinks.css\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport UserProfileNav from \"../../../users/components/UserProfileNav\";\r\nimport UsersContext from \"../../context/users/usersContext\";\r\nconst NavLinks = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const usersContext = useContext(UsersContext);\r\n  const { user } = usersContext;\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n  return (\r\n    <ul className=\"nav-links no-select\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">ADD PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <Fragment>\r\n          <li className=\"desktop-menu\">\r\n            <div\r\n              className=\"avatar-holder\"\r\n              onClick={() => setDrawerOpen(!drawerOpen)}\r\n            >\r\n              MY\r\n              {user && (\r\n                <Avatar\r\n                  src={user.image}\r\n                  alt={user.name}\r\n                  style={{ margin: \"0 1rem\" }}\r\n                />\r\n              )}\r\n            </div>\r\n            {drawerOpen && <UserProfileNav setDrawerOpen={setDrawerOpen} />}\r\n          </li>\r\n          <li className=\"mobile-submenu\">\r\n            <div className=\"avatar-holder\"> \r\n              <p>MY</p>\r\n              {user && (\r\n                <Avatar\r\n                  src={user.image}\r\n                  alt={user.name}\r\n                  style={{ margin: \"0 1rem\" }}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"mobile-links\">\r\n            <NavLink to={`/${auth.userId}/bucketlist`}>\r\n              <span>My Bucket List</span>\r\n            </NavLink>\r\n            <NavLink to={`/${auth.userId}/my`}>\r\n              <span>Profile</span>\r\n            </NavLink>\r\n            <NavLink to={`/${auth.userId}/friends`}>\r\n              <span> My Friends</span>\r\n            </NavLink>\r\n            <NavLink to={`/${auth.userId}/messages`}>\r\n              <span>Messages</span>\r\n            </NavLink>\r\n            </div>\r\n          </li>\r\n        </Fragment>\r\n      )}\r\n\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MainHeader from './MainHeader';\r\nimport SideDrawer from './SideDrawer';\r\nimport NavLinks from './NavLinks';\r\nimport Backdrop from '../UIElements/Backdrop';\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = props => {\r\n\tconst [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\tconst openDrawerHandler = () => {\r\n\t\tsetDrawerIsOpen(true);\r\n\t};\r\n\tconst closeDrawerHandler = () => {\r\n\t\tsetDrawerIsOpen(false);\r\n\t};\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n\r\n\t\t\t<SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n\t\t\t\t<nav className=\"main-navigation__drawer-nav\">\r\n\t\t\t\t\t<NavLinks />\r\n\t\t\t\t</nav>\r\n\t\t\t</SideDrawer>\r\n\r\n\t\t\t<MainHeader>\r\n\t\t\t\t<button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n\t\t\t\t\t<span />\r\n\t\t\t\t\t<span />\r\n\t\t\t\t\t<span />\r\n\t\t\t\t</button>\r\n\t\t\t\t<h1 className=\"main-navigation__title no-select\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc=\"/images/logo-yp-2.png\"\r\n\t\t\t\t\t\talt=\"logo\"\r\n\t\t\t\t\t\tstyle={{ width: \"3rem\", margin: \"0 0.5rem\" }}/>\r\n\t\t\t\t\t<Link to=\"/\">YourPlaces</Link>\r\n\t\t\t\t</h1>\r\n\t\t\t\t<nav className=\"main-navigation__header-nav\">\r\n\t\t\t\t\t<NavLinks />\r\n\t\t\t\t</nav>\r\n\t\t\t</MainHeader>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nexport default function Social() {\r\n  const auth = useContext(AuthContext);\r\n  const socialLog = () => {\r\n    const token = new URL(window.location).searchParams.get(\"token\");\r\n    const uId = new URL(window.location).searchParams.get(\"userId\");\r\n    auth.login(uId, token);\r\n  };\r\n  useEffect(() => {\r\n    socialLog();\r\n  });\r\n  return null;\r\n}\r\n","import React, { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport useHttpClient from \"../../hooks/http-hook\";\r\nimport { AuthContext } from \"../auth-context\";\r\nimport UsersContext from \"./usersContext\";\r\nconst UsersState = (props) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [user, setUser] = useState({});\r\n  const [processedUsers, setProcessedUsers] = useState([]);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const getUsers = useCallback(\r\n    async (searchValue) => {\r\n      try {\r\n        const data = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users?sortBy=${sortBy}&&search=${searchValue}&page=${currentPage}&limit=10`\r\n        );\r\n\r\n        setUsers(data.users);\r\n\r\n        setTotalPages(data.totalPages);\r\n        let userData;\r\n        if (auth.token) {\r\n          userData = await sendRequest(\r\n            `${process.env.REACT_APP_BACKEND_URL}/users/me`,\r\n            \"GET\",\r\n            null,\r\n            {\r\n              Authorization: \"Bearer \" + auth.token,\r\n            }\r\n          );\r\n        }\r\n        setUser(userData);\r\n        setUsers(data.users);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    [auth.token, sendRequest, sortBy, currentPage]\r\n  );\r\n\r\n  useEffect(() => {\r\n    getUsers(\"\");\r\n  }, [processedUsers, auth.token, sendRequest, sortBy, getUsers, currentPage]);\r\n\r\n  const sendFriendRequestHandler = (id) => {\r\n    setProcessedUsers((prevValue) => [...prevValue, id]);\r\n  };\r\n\r\n  return (\r\n    <UsersContext.Provider\r\n      value={{\r\n        isLoading,\r\n        error,\r\n        clearError,\r\n        users,\r\n        user,\r\n        setSortBy,\r\n        sendFriendRequestHandler,\r\n        getUsers,\r\n        totalPages,\r\n        currentPage,\r\n        setCurrentPage,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UsersContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UsersState;\r\n","import React, { Suspense, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport MainNavigation from \"./shared/component/Navigation/MainNavigation\";\r\nimport { AuthContext } from \"./shared/context/auth-context\";\r\nimport { MessageContext } from \"./shared/context/message-context\";\r\nimport { useAuth } from \"./shared/hooks/auth-hook\";\r\nimport LoadingSpinner from \"./shared/component/UIElements/LoadingSpinner\";\r\nimport Social from \"./users/pages/Social\";\r\n\r\nimport UsersState from \"./shared/context/users/UsersState\";\r\nconst Messages = React.lazy(() => import(\"./users/pages/Messages\"));\r\nconst ForgetPassword = React.lazy(() =>\r\n  import(\"./users/components/ForgetPassword\")\r\n);\r\nconst ResetEmail = React.lazy(() => import(\"./users/components/ResetEmail\"));\r\n\r\nconst Auth = React.lazy(() => import(\"./users/pages/Auth\"));\r\nconst UserProfileNav = React.lazy(() =>\r\n  import(\"./users/components/UserProfileNav\")\r\n);\r\nconst User = React.lazy(() => import(\"./users/pages/User\"));\r\nconst Users = React.lazy(() => import(\"./users/pages/Users\"));\r\nconst Friends = React.lazy(() => import(\"./friends/pages/Friends\"));\r\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\r\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\r\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\r\nconst BucketList = React.lazy(() => import(\"./places/components/BucketList\"));\r\nconst Place = React.lazy(() => import(\"./places/pages/Place\"));\r\nconst RegisterConfirmation = React.lazy(() =>\r\n  import(\"./users/components/RegisterConfirmation\")\r\n);\r\nconst App = () => {\r\n  const { token, login, logout, userId } = useAuth();\r\n  const [messagesData] = useState([]);\r\n\r\n  let routes;\r\n  if (token) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/:userId/my\">\r\n          <User />\r\n        </Route>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/places/new\" exact>\r\n          <NewPlace />\r\n        </Route>\r\n        <Route path=\"/places/:placeId\" exact>\r\n          <Place />\r\n        </Route>\r\n        <Route path=\"/places/:placeId/edit\">\r\n          <UpdatePlace />\r\n        </Route>\r\n        <Route path=\"/:userId/friends\" exact>\r\n          <Friends />\r\n        </Route>\r\n        <Route path=\"/:userId/bucketlist\">\r\n          <BucketList />\r\n        </Route>\r\n        <Route path=\"/:userId/messages\">\r\n          <UserProfileNav />\r\n          <Messages />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/places/:placeId\" exact>\r\n          <Place />\r\n        </Route>\r\n        <Route path=\"/auth\">\r\n          <Auth />\r\n        </Route>\r\n        <Route path=\"/social\">\r\n          <Social />\r\n        </Route>\r\n        <Route path=\"/forgetpassword\">\r\n          <ForgetPassword />\r\n        </Route>\r\n        <Route path=\"/resetpassword/:token\">\r\n          <ResetEmail />\r\n        </Route>\r\n        <Route path=\"/confirm/:token\">\r\n          <RegisterConfirmation />\r\n        </Route>\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n  }\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: !!token,\r\n        token,\r\n        login,\r\n        logout,\r\n        userId,\r\n      }}\r\n    >\r\n      <MessageContext.Provider value={{ messagesData }}>\r\n        <UsersState>\r\n          <Router>\r\n            <MainNavigation />\r\n            <main>\r\n              <Suspense\r\n                fallback={\r\n                  <div className=\"center\">\r\n                    <LoadingSpinner asOverlay />\r\n                  </div>\r\n                }\r\n              >\r\n                {routes}\r\n              </Suspense>\r\n            </main>\r\n          </Router>\r\n        </UsersState>\r\n      </MessageContext.Provider>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}