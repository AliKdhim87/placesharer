{"version":3,"sources":["users/pages/Auth.js","shared/component/formElements/ImageUpload.js"],"names":["Auth","auth","useContext","AuthContext","useState","isLoginMod","setIsLoginMod","useHttpClient","isLoading","error","sendRequest","clearError","socialLogin","toggleSocialLogin","useFrom","email","value","isValid","password","state","inputHandler","setFormData","authSubmitHandler","event","a","preventDefault","process","JSON","stringify","inputs","res","login","userId","token","friendStatus","formData","FormData","append","name","image","onClear","className","asOverlay","onSubmit","href","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","center","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","disabled","to","inverse","onClick","undefined","prevMode","ImageUpload","pickedFile","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileIsValid","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","target","files","length","src","alt","current","click"],"mappings":"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","file":"static/js/12.e7234fbe.chunk.js","sourcesContent":["import React, { useState, useContext, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Auth.css\";\r\nimport Input from \"../../shared/component/formElements/Input\";\r\nimport Button from \"../../shared/component/formElements/Button\";\r\nimport Card from \"../../shared/component/UIElements/Card\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/component/formElements/ImageUpload\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport { useFrom } from \"../../shared/hooks/form-hook\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/Util/validators\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n// React Icons\r\nimport { FaFacebookF, FaGoogle } from \"react-icons/fa\";\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMod, setIsLoginMod] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [socialLogin, toggleSocialLogin] = useState(true);\r\n\r\n  const [state, inputHandler, setFormData] = useFrom(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  const switchModelHandler = () => {\r\n    if (!isLoginMod) {\r\n      setFormData(\r\n        {\r\n          ...state.inputs,\r\n          name: undefined,\r\n          image: undefined\r\n        },\r\n        state.inputs.email.isValid && state.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...state.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMod(prevMode => !prevMode);\r\n    toggleSocialLogin(socialLogin => !socialLogin);\r\n  };\r\n\r\n  const authSubmitHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMod) {\r\n      try {\r\n        const res = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: state.inputs.email.value,\r\n            password: state.inputs.password.value\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        );\r\n\r\n        auth.login(res.userId, res.token, null, res.friendStatus);\r\n      } catch (error) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", state.inputs.email.value);\r\n        formData.append(\"password\", state.inputs.password.value);\r\n        formData.append(\"name\", state.inputs.name.value);\r\n        formData.append(\"image\", state.inputs.image.value);\r\n\r\n        const res = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n          \"POST\",\r\n          formData\r\n        );\r\n\r\n        auth.login(res.userId, res.token);\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication no-select\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {/* social login */}\r\n          {socialLogin && (\r\n            <div>\r\n              <h3>Log in with</h3>\r\n              <a\r\n                className=\"socialBtn\"\r\n                href={`${process.env.REACT_APP_BACKEND_URL}/users/facebook`}\r\n              >\r\n                <FaFacebookF />\r\n                <span className=\"socialName\">Facebook</span>\r\n              </a>\r\n              {/*  */}\r\n              <a\r\n                className=\"socialBtn\"\r\n                href={`${process.env.REACT_APP_BACKEND_URL}/users/google`}\r\n              >\r\n                <FaGoogle />\r\n                <span className=\"socialName\">Google</span>\r\n              </a>\r\n              <h3>______or______</h3>\r\n            </div>\r\n          )}\r\n          {!isLoginMod && (\r\n            <Input\r\n              id=\"name\"\r\n              element=\"input\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a valid name\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMod && (\r\n            <ImageUpload\r\n              center\r\n              id={\"image\"}\r\n              onInput={inputHandler}\r\n              errorText=\"Please provide an image\"\r\n            />\r\n          )}\r\n          <Input\r\n            id=\"email\"\r\n            element=\"input\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            isLoading\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            element=\"input\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 6 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!state.isValid}>\r\n            {isLoginMod ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n          {isLoginMod && (\r\n            <Link to=\"/forgetpassword\">\r\n              <Button>FORGOT PASSWORD</Button>\r\n            </Link>\r\n          )}\r\n        </form>\r\n        <Button inverse onClick={switchModelHandler}>\r\n          SWITCH TO {isLoginMod ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./ImageUpload.css\";\r\nimport Button from \"./Button\";\r\nconst ImageUpload = ({ id, center, onInput, errorText }) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n  const filePickerRef = useRef();\r\n  let pickedFile;\r\n  let fileIsValid = isValid;\r\n\r\n  useEffect(() => {\r\n    if (!file) return;\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    if (event.target.files || event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    onInput(id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => filePickerRef.current.click();\r\n\r\n  return (\r\n    <div className='form-control'>\r\n      <input\r\n        ref={filePickerRef}\r\n        id={id}\r\n        style={{ display: \"none\" }}\r\n        type='file'\r\n        accept='.jpg,.png,.jpeg'\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${center && \"center\"}`}>\r\n        <div className='image-upload__preview'>\r\n          {previewUrl && <img src={previewUrl} alt='Preview' />}{\" \"}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type='button' onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n"],"sourceRoot":""}