{"version":3,"sources":["shared/context/auth-context.js","shared/hooks/http-hook.js","shared/component/UIElements/LoadingSpinner.js","shared/context/message-context.js","shared/component/UIElements/ErrorModal.js","shared/component/formElements/Button.js","shared/Util/validators.js","shared/component/UIElements/Backdrop.js","shared/component/UIElements/Card.js","shared/component/formElements/Input.js","shared/hooks/form-hook.js","shared/component/UIElements/Avatar.js","shared/component/UIElements/Modal.js","users/components/MessageItem.js","users/pages/Messages.js","shared/hooks/auth-hook.js","shared/component/Navigation/MainHeader.js","shared/component/Navigation/SideDrawer.js","shared/component/Navigation/SearchBar.js","shared/component/Navigation/NavLinks.js","shared/component/Navigation/MainNavigation.js","users/pages/Social.js","search/components/ResultItem.js","search/components/ResultsList.js","search/pages/Search.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","token","userId","login","logout","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","res","json","data","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","LoadingSpinner","props","className","asOverlay","MessageContext","messagesData","id","ErrorModal","onClear","header","onCancel","show","footer","onClick","Button","href","size","inverse","danger","children","to","exact","type","disabled","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test","Backdrop","ReactDOM","createPortal","document","getElementById","Card","style","inputReducer","state","action","isTouched","Input","changeHandeler","event","dispatch","target","touchHandler","inaialState","initailValue","initailValid","useReducer","onInput","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useFrom","initailInput","initailFormValidity","inputData","formValidity","Avatar","image","alt","width","src","height","ModalOverlay","content","headerClass","onSubmit","e","preventDefault","contentClass","footerClass","Modal","in","mountOnEnter","unmountOnExit","timeout","classNames","MessageItem","msg","messageDeleteHandler","getUserMessages","useContext","delMessage","msgId","process","Authorization","formatDate","date","Date","toLocaleString","key","_id","isSent","Messages","contacts","setContacts","allMessages","setAllMessages","mobileContactMode","setMobileContactMode","myScrollRef","scrollToBottom","scrollIntoView","behavior","inputHandler","fetchContacts","corresponders","sendMessage","corresponderId","messageValue","JSON","stringify","messageId","console","fetchedMessages","messages","dltCorresponder","filteredContacts","contact","log","deletedMsgId","prevAllMessages","msgBoxHeight","window","innerHeight","Fragment","map","corresponder","name","i","ref","logoutTimer","MainHeader","SideDrawer","CSSTransition","SearchBar","searchValue","setSearchValue","history","useHistory","NavLinks","auth","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Social","URL","location","searchParams","get","uId","socialLog","ResultItem","place","item","title","user","ResultsList","items","placesExist","places","usersExist","users","Search","results","setResults","query","getResults","ForgetPassword","React","lazy","ResetEmail","Auth","UserProfileNav","User","Users","Friends","NewPlace","UserPlaces","UpdatePlace","BucketList","Place","RegisterConfirmation","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","component","withRouter","Provider","fallback","render"],"mappings":"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","file":"static/js/main.50254a46.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  token: null,\r\n  userId: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import { useState, useCallback, useRef, useEffect } from 'react';\r\nconst useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    setIsLoading(true);\r\n    const httpAbortCtrl = new AbortController();\r\n    activeHttpRequests.current.push(httpAbortCtrl);\r\n    try {\r\n      const res = await fetch(url, {\r\n        method,\r\n        body,\r\n        headers,\r\n        signal: httpAbortCtrl.signal,\r\n      });\r\n      const data = await res.json();\r\n      activeHttpRequests.current = activeHttpRequests.current.filter(\r\n        reqCtrl => reqCtrl !== httpAbortCtrl,\r\n      );\r\n      if (!res.ok) {\r\n        throw new Error(data.message);\r\n      }\r\n      setIsLoading(false);\r\n      return data;\r\n    } catch (error) {\r\n      setError(error.message || 'Something went wrong, please try again.');\r\n      setIsLoading(false);\r\n      throw error;\r\n    }\r\n  }, []);\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\nexport default useHttpClient;\r\n","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import { createContext } from \"react\";\r\nexport const MessageContext = createContext({\r\n  messagesData: [], // to set all the messages involving the id below\r\n  id: \"\", // to set the texted person object id\r\n});\r\n","import React from \"react\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport Button from \"../formElements/Button\";\r\n\r\nconst ErrorModal = ({ error, onClear, header }) => {\r\n  return (\r\n    <Modal\r\n      onCancel={onClear}\r\n      header={header || \"An Error Occurred!!!\"}\r\n      show={!!error}\r\n      footer={<Button onClick={onClear}>Okay</Button>}\r\n    >\r\n      <div>{error}</div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById('backdrop-hook')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport { validate } from \"../../Util/validators\";\r\nimport \"./Input.css\";\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const changeHandeler = event => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n  const touchHandler = event => {\r\n    dispatch({ type: \"TOUCH\" });\r\n  };\r\n  const inaialState = {\r\n    value: props.initailValue || \"\",\r\n    isValid: props.initailValid || false,\r\n    isTouched: false,\r\n  };\r\n  const [state, dispatch] = useReducer(inputReducer, inaialState);\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = state;\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandeler}\r\n        onBlur={touchHandler}\r\n        value={state.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandeler}\r\n        onBlur={touchHandler}\r\n        value={state.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div className={`form-control ${!state.isValid && state.isTouched && \"form-control--invalid\"}`}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!state.isValid && state.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        ...state,\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useFrom = (initailInput, initailFormValidity) => {\r\n  const [state, dispatch] = useReducer(formReducer, {\r\n    inputs: initailInput,\r\n    isValid: initailFormValidity\r\n  });\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n  return [state, inputHandler, setFormData];\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./Avatar.css\";\r\n\r\nconst Avatar = ({ image, alt, style, className, width }) => {\r\n  return (\r\n    <div className={`avatar ${className}`} style={style}>\r\n      <img src={image} alt={alt} style={{ width: width, height: width }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Backdrop from \"./Backdrop\";\r\nconst Modal = props => {\r\n  return (\r\n    <Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames='modal'\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </Fragment>\r\n  );\r\n};\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={props.onSubmit ? props.onSubmit : e => e.preventDefault()}\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useContext, Fragment } from \"react\";\r\nimport { MessageContext } from \"../../shared/context/message-context\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./MessageItem.css\";\r\n\r\nconst MessageItem = ({ msg, messageDeleteHandler, getUserMessages }) => {\r\n  const message = useContext(MessageContext);\r\n  const { sendRequest } = useHttpClient();\r\n  const { token } = useContext(AuthContext);\r\n\r\n  const delMessage = async (userId, msgId) => {\r\n    await sendRequest(\r\n      `${process.env.REACT_APP_BACKEND_URL}/user/messages/${userId}/${msgId}`,\r\n      \"DELETE\",\r\n      null,\r\n      {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    );\r\n\r\n    messageDeleteHandler(msgId);\r\n    getUserMessages(userId);\r\n  };\r\n  const formatDate = date=>{\r\n    const d1= new Date(date);\r\n    return d1.toLocaleString('en-NL')\r\n  }\r\n  return (\r\n    <div key={msg._id} className={`mContainer ${msg.isSent ? \"myMsg\" : \"userMsg\"}`}>\r\n      <div className={`msgInfo ${msg.isSent ? \"toRyt\" : \"toLeft\"}`}>\r\n        {msg.isSent ? (\r\n          <Fragment>\r\n            <p>{formatDate(msg.date)}</p>\r\n            <button onClick={() => delMessage(message.id, msg._id)}>x</button>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <button onClick={() => delMessage(message.id, msg._id)}>x</button>\r\n            <p>{formatDate(msg.date)}</p>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n      <h3>{msg.message}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageItem;\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Card from \"../../shared/component/UIElements/Card\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport \"./Messages.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MessageContext } from \"../../shared/context/message-context\";\r\nimport Input from \"../../shared/component/formElements/Input\";\r\nimport { useFrom } from \"../../shared/hooks/form-hook\";\r\nimport { VALIDATOR_REQUIRE } from \"../../shared/Util/validators\";\r\nimport Button from \"../../shared/component/formElements/Button\";\r\nimport MessageItem from \"../components/MessageItem\";\r\nimport Avatar from \"../../shared/component/UIElements/Avatar\";\r\n\r\nconst Messages = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const { token } = useContext(AuthContext);\r\n  const message = useContext(MessageContext);\r\n  const [allMessages, setAllMessages] = useState(message.messagesData);\r\n  const [mobileContactMode, setMobileContactMode] = useState(true);\r\n\r\n  // scroll to the bottom of the messages box\r\n  const myScrollRef = useRef();\r\n  const scrollToBottom = () => {\r\n    myScrollRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const [state, inputHandler] = useFrom(\r\n    {\r\n      message: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false,\r\n  );\r\n\r\n  // fetching contacts (only texted ones not all users)\r\n  const fetchContacts = async () => {\r\n    try {\r\n      const data = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/messages`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      );\r\n      setContacts(data.corresponders);\r\n      scrollToBottom();\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchContacts();\r\n  }, [sendRequest, token]);\r\n\r\n  // Send a message\r\n  const sendMessage = async e => {\r\n    e.preventDefault();\r\n    const corresponderId = message.id;\r\n    const messageValue = state.inputs.message.value;\r\n    try {\r\n      const res = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/messages/${corresponderId}`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          message: messageValue,\r\n        }),\r\n        {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      );\r\n      setAllMessages([...allMessages, { message: messageValue, isSent: true, _id: res.messageId }]);\r\n      scrollToBottom();\r\n      getUserMessages(corresponderId);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Get all messages as per the texted person\r\n  const getUserMessages = async id => {\r\n    const corresponderId = id;\r\n    try {\r\n      const fetchedMessages = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/messages/${corresponderId}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      );\r\n      fetchContacts();\r\n      setAllMessages(fetchedMessages.messages);\r\n      message.id = corresponderId;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Delete a corresponder\r\n  const dltCorresponder = async id => {\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/messages/${id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      );\r\n      const filteredContacts = contacts.filter(contact => contact._id !== id);\r\n      setContacts(filteredContacts);\r\n      setAllMessages([]);\r\n      fetchContacts();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const messageDeleteHandler = deletedMsgId => {\r\n    setAllMessages(prevAllMessages => prevAllMessages.filter(msg => msg.id !== deletedMsgId));\r\n  };\r\n\r\n  const msgBoxHeight = {\r\n    height: window.innerHeight - 0.12 * window.innerHeight,\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <ErrorModal error={error} onClear={clearError} />\r\n\r\n      {!isLoading && (\r\n        <Card className=\"messages__card\" style={msgBoxHeight}>\r\n          {/* Contacts */}\r\n          <div\r\n            className={\r\n              mobileContactMode\r\n                ? `contacts__container contact__container-mobile`\r\n                : `contacts__container contact__container-hidden`\r\n            }\r\n          >\r\n            <h2 className=\"header\">Recent</h2>\r\n            <div className=\"contacts__box\">\r\n              {contacts.length > 0 &&\r\n                contacts.map(contact => (\r\n                  <Card\r\n                    className=\"user-item__content\"\r\n                    key={contact.corresponder._id}\r\n                    className={`user-item__content ${message.id === contact.corresponder._id &&\r\n                      \"activatedContact\"}`}\r\n                  >\r\n                    <div\r\n                      onClick={() => {\r\n                        getUserMessages(contact.corresponder._id);\r\n                        setMobileContactMode(false);\r\n                      }}\r\n                      className={`cardWidth`}\r\n                    >\r\n                      <div className=\"user-item__image m-1\">\r\n                        <Avatar\r\n                          image={contact.corresponder.image}\r\n                          alt={contact.corresponder.name}\r\n                        />\r\n                      </div>\r\n                      <div className=\"user-item__info m-1\">\r\n                        <h3>{contact.corresponder.name}</h3>\r\n                      </div>\r\n                    </div>\r\n                    <button onClick={() => dltCorresponder(contact.corresponder._id)}>X</button>\r\n                  </Card>\r\n                ))}\r\n            </div>\r\n            <div className=\"innerBox\">\r\n              {contacts.length === 0 && (\r\n                <Link className=\"link-text\" to=\"/\">\r\n                  Text a user!\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Messages */}\r\n          <div\r\n            className={\r\n              mobileContactMode\r\n                ? `message__box message__box-hidden`\r\n                : `message__box message__box-mobile`\r\n            }\r\n          >\r\n            <h2 className=\"header\">Messages</h2>\r\n            <a\r\n              onClick={() => {\r\n                setMobileContactMode(true);\r\n              }}\r\n              className=\"mobile-hidden\"\r\n            >\r\n              BACK\r\n            </a>\r\n            <div className=\"msgsContainer\">\r\n              {allMessages.length > 0 ? (\r\n                allMessages.map((msg, i) => (\r\n                  <MessageItem\r\n                    key={i}\r\n                    msg={msg}\r\n                    messageDeleteHandler={messageDeleteHandler}\r\n                    getUserMessages={getUserMessages}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <div>Start a message!</div>\r\n              )}\r\n              <div ref={myScrollRef}></div>\r\n            </div>\r\n            <Input\r\n              id=\"message\"\r\n              type=\"text\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter your message\"\r\n              onInput={inputHandler}\r\n            />\r\n            <Button onClick={sendMessage}>Send</Button>\r\n          </div>\r\n        </Card>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Messages;\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      }),\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n\r\n    localStorage.removeItem('userData');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\r\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n    }\r\n  }, [login]);\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = props => {\r\n  return <header className='main-header'>{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./SideDrawer.css\";\r\nconst SideDrawer = props => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames='slide-in-left'\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className='side-drawer' onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n  return ReactDOM.createPortal(\r\n    content,\r\n    document.getElementById(\"drawer-hooks\")\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./SearchBar.css\";\r\n\r\nconst SearchBar = props => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (searchValue.length > 0) {\r\n      history.push(`/search?q=${searchValue}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className='search-bar__form' onSubmit={submitHandler}>\r\n      <input\r\n        className='search-bar__text'\r\n        type='text'\r\n        name='search'\r\n        placeholder='Search...'\r\n        value={searchValue}\r\n        onChange={e => {\r\n          setSearchValue(e.target.value);\r\n        }}\r\n      />\r\n      <button className='search-bar__submit' type='submit'>\r\n        <i className='fas fa-search'></i>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./NavLinks.css\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport SearchBar from \"./SearchBar\";\r\nconst NavLinks = props => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className=\"nav-links no-select\">\r\n      <li>\r\n        <NavLink to='/' exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to='/places/new'>ADD PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/my`}>MY</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <SearchBar />\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MainHeader from './MainHeader';\r\nimport SideDrawer from './SideDrawer';\r\nimport NavLinks from './NavLinks';\r\nimport Backdrop from '../UIElements/Backdrop';\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = props => {\r\n\tconst [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\tconst openDrawerHandler = () => {\r\n\t\tsetDrawerIsOpen(true);\r\n\t};\r\n\tconst closeDrawerHandler = () => {\r\n\t\tsetDrawerIsOpen(false);\r\n\t};\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n\r\n\t\t\t<SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n\t\t\t\t<nav className=\"main-navigation__drawer-nav\">\r\n\t\t\t\t\t<NavLinks />\r\n\t\t\t\t</nav>\r\n\t\t\t</SideDrawer>\r\n\r\n\t\t\t<MainHeader>\r\n\t\t\t\t<button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n\t\t\t\t\t<span />\r\n\t\t\t\t\t<span />\r\n\t\t\t\t\t<span />\r\n\t\t\t\t</button>\r\n\t\t\t\t<h1 className=\"main-navigation__title no-select\">\r\n\t\t\t\t\t<Link to=\"/\">YourPlaces</Link>\r\n\t\t\t\t</h1>\r\n\t\t\t\t<nav className=\"main-navigation__header-nav\">\r\n\t\t\t\t\t<NavLinks />\r\n\t\t\t\t</nav>\r\n\t\t\t</MainHeader>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nexport default function Social() {\r\n  const auth = useContext(AuthContext);\r\n  const socialLog = () => {\r\n    const token = new URL(window.location).searchParams.get(\"token\");\r\n    const uId = new URL(window.location).searchParams.get(\"userId\");\r\n    auth.login(uId, token);\r\n  };\r\n  useEffect(() => {\r\n    socialLog();\r\n  });\r\n  return null;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./ResultItem.css\";\r\n\r\nexport default function ResultItem(props) {\r\n  return (\r\n    <div>\r\n      {props.place && (\r\n        <div>\r\n          <Link to={`/places/${props.item._id}`}>\r\n            <p className='search-result__name'>{props.item.title}</p>\r\n          </Link>\r\n        </div>\r\n      )}\r\n      {props.user && (\r\n        <div>\r\n          <Link to={`/${props.item._id}/places`}>\r\n            <p className='search-result__name'>{props.item.name}</p>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./ResultsList.css\";\r\nimport ResultItem from \"./ResultItem\";\r\n\r\nexport default function ResultsList({ items }) {\r\n  const placesExist = items && items.places && items.places.length;\r\n  const usersExist = items && items.users && items.users.length;\r\n\r\n  return (\r\n    <div>\r\n      {placesExist ? (\r\n        <React.Fragment>\r\n          <h4 className='search-headers'>PLACES</h4>\r\n          {items.places.map(item => (\r\n            <ResultItem key={item.id} item={item} place />\r\n          ))}\r\n        </React.Fragment>\r\n      ) : (\r\n        <p>No places found</p>\r\n      )}\r\n\r\n      {usersExist ? (\r\n        <React.Fragment>\r\n          <h4 className='search-headers'>USERS</h4>\r\n          {items.users.map(item => (\r\n            <ResultItem key={item.id} item={item} user />\r\n          ))}\r\n        </React.Fragment>\r\n      ) : (\r\n        <p>No users found</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Search.css\";\r\n\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport ResultsList from \"../components/ResultsList\";\r\n\r\nexport default function Search() {\r\n  const [results, setResults] = useState({});\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  let query = new URL(window.location).searchParams.get(\"q\");\r\n\r\n  useEffect(() => {\r\n    const getResults = async () => {\r\n      try {\r\n        const data = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/search?q=${query}`\r\n        );\r\n\r\n        setResults(data.results);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    getResults();\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className='search__page'>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className='center'>\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && results && <ResultsList items={results} />}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Suspense, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport MainNavigation from \"./shared/component/Navigation/MainNavigation\";\r\nimport { AuthContext } from \"./shared/context/auth-context\";\r\nimport { MessageContext } from \"./shared/context/message-context\";\r\nimport { useAuth } from \"./shared/hooks/auth-hook\";\r\nimport LoadingSpinner from \"./shared/component/UIElements/LoadingSpinner\";\r\nimport Social from \"./users/pages/Social\";\r\nimport Search from \"./search/pages/Search\";\r\nimport Messages from \"./users/pages/Messages\";\r\nconst ForgetPassword = React.lazy(() => import(\"./users/components/ForgetPassword\"));\r\nconst ResetEmail = React.lazy(() => import(\"./users/components/ResetEmail\"));\r\n\r\nconst Auth = React.lazy(() => import(\"./users/pages/Auth\"));\r\nconst UserProfileNav = React.lazy(() => import(\"./users/components/UserProfileNav\"));\r\nconst User = React.lazy(() => import(\"./users/pages/User\"));\r\nconst Users = React.lazy(() => import(\"./users/pages/Users\"));\r\nconst Friends = React.lazy(() => import(\"./friends/pages/Friends\"));\r\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\r\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\r\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\r\nconst BucketList = React.lazy(() => import(\"./places/components/BucketList\"));\r\nconst Place = React.lazy(() => import(\"./places/pages/Place\"));\r\nconst RegisterConfirmation = React.lazy(() => import(\"./users/components/RegisterConfirmation\"));\r\nconst App = () => {\r\n  const { token, login, logout, userId } = useAuth();\r\n  const [messagesData, setMessagesData] = useState([]);\r\n\r\n  let routes;\r\n  if (token) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/:userId/my\">\r\n          <User />\r\n        </Route>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/search\" exact component={withRouter(Search)} />\r\n\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/places/new\" exact>\r\n          <NewPlace />\r\n        </Route>\r\n        <Route path=\"/places/:placeId\" exact>\r\n          <Place />\r\n        </Route>\r\n        <Route path=\"/places/:placeId/edit\">\r\n          <UpdatePlace />\r\n        </Route>\r\n        <Route path=\"/:userId/friends\" exact>\r\n          <Friends />\r\n        </Route>\r\n        <Route path=\"/:userId/bucketlist\">\r\n          <BucketList />\r\n        </Route>\r\n        <Route path=\"/:userId/messages\">\r\n          <UserProfileNav />\r\n          <Messages />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/places/:placeId\" exact>\r\n          <Place />\r\n        </Route>\r\n        <Route path=\"/auth\">\r\n          <Auth />\r\n        </Route>\r\n        <Route path=\"/social\">\r\n          <Social />\r\n        </Route>\r\n        <Route path=\"/forgetpassword\">\r\n          <ForgetPassword />\r\n        </Route>\r\n        <Route path=\"/resetpassword/:token\">\r\n          <ResetEmail />\r\n        </Route>\r\n        <Route path=\"/confirm/:token\">\r\n          <RegisterConfirmation />\r\n        </Route>\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n  }\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: !!token,\r\n        token,\r\n        login,\r\n        logout,\r\n        userId,\r\n      }}\r\n    >\r\n      <MessageContext.Provider value={{ messagesData }}>\r\n        <Router>\r\n          <MainNavigation />\r\n          <main>\r\n            <Suspense\r\n              fallback={\r\n                <div className=\"center\">\r\n                  <LoadingSpinner asOverlay />\r\n                </div>\r\n              }\r\n            >\r\n              {routes}\r\n            </Suspense>\r\n          </main>\r\n        </Router>\r\n      </MessageContext.Provider>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}