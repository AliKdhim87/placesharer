{"version":3,"sources":["shared/Util/validators.js","shared/component/formElements/Input.js","shared/hooks/form-hook.js","places/components/CommentForm.js","places/components/Comment.js","places/components/CommentList.js","places/pages/Comments.js","places/components/PlaceItemView.js","places/pages/Place.js","shared/component/formElements/Button.js","shared/component/UIElements/ErrorModal.js","shared/component/UIElements/Modal.js"],"names":["VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","props","changeHandeler","event","dispatch","target","touchHandler","inaialState","initailValue","initailValid","useReducer","id","onInput","useEffect","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useFrom","initailInput","initailFormValidity","useCallback","inputData","formValidity","CommentForm","addComment","placeId","auth","useContext","AuthContext","useState","commentText","setCommentText","useHttpClient","isLoading","error","sendRequest","clearError","submitHandler","a","preventDefault","process","JSON","stringify","comment","Authorization","token","data","createComment","noValidate","ErrorModal","onClear","LoadingSpinner","isLoggedIn","TextField","e","Button","onClick","Comment","editMode","setEditMode","_id","creator","date","hasRight","userId","useParams","inputHandler","deleteComment","removeComment","updateComment","handleIt","onSubmit","style","marginRight","variant","color","disabled","src","image","alt","name","width","height","format","startIcon","size","currentMode","CommentList","comments","Fragment","map","key","Comments","setComments","commentsData","getComments","currentComments","commentId","filter","c","title","PlaceItemView","place","address","description","Container","Card","imageUrl","Place","setPlace","placeData","getPlace","Object","keys","href","inverse","danger","children","to","exact","header","onCancel","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","in","mountOnEnter","unmountOnExit","timeout","classNames"],"mappings":"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","file":"static/js/9.96d7db8c.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useReducer, useEffect } from 'react';\r\nimport { validate } from '../../Util/validators';\r\nimport './Input.css';\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case 'TOUCH':\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const changeHandeler = (event) => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n  const touchHandler = (event) => {\r\n    dispatch({ type: 'TOUCH' });\r\n  };\r\n  const inaialState = {\r\n    value: props.initailValue || '',\r\n    isValid: props.initailValid || false,\r\n    isTouched: false,\r\n  };\r\n  const [state, dispatch] = useReducer(inputReducer, inaialState);\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = state;\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandeler}\r\n        onBlur={touchHandler}\r\n        value={state.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandeler}\r\n        onBlur={touchHandler}\r\n        value={state.value}\r\n        placeholder={props.placeholder}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !state.isValid && state.isTouched && 'form-control--invalid'\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!state.isValid && state.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        ...state,\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useFrom = (initailInput, initailFormValidity) => {\r\n  const [state, dispatch] = useReducer(formReducer, {\r\n    inputs: initailInput,\r\n    isValid: initailFormValidity\r\n  });\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n  return [state, inputHandler, setFormData];\r\n};\r\n","import React, { useContext, Fragment, useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport Button from \"../../shared/component/formElements/Button\";\r\n\r\nimport \"./CommentForm.css\";\r\nexport default function CommentForm({ addComment, placeId }) {\r\n  const auth = useContext(AuthContext);\r\n  const [commentText, setCommentText] = useState(\"\");\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const createComment = async () => {\r\n      try {\r\n        const data = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}/comments`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            comment: commentText,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        addComment(data.comment);\r\n\r\n        setCommentText(\"\");\r\n      } catch (error) {}\r\n    };\r\n    createComment();\r\n  };\r\n  const commentHandler = (e) => setCommentText(e.target.value);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className={`add_comment-container`} noValidate>\r\n        <Fragment>\r\n          <ErrorModal error={error} onClear={clearError} />\r\n          {isLoading && <LoadingSpinner />}\r\n          {auth.isLoggedIn && (\r\n            <form className=\"comment-form\">\r\n              <TextField\r\n                className=\"input-comment\"\r\n                label=\"Write your comment here ...\"\r\n                onChange={commentHandler}\r\n                value={commentText}\r\n              ></TextField>\r\n              <Button id=\"comment-button\" onClick={submitHandler}>\r\n                Add Comment\r\n              </Button>\r\n            </form>\r\n          )}\r\n        </Fragment>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Input from \"../../shared/component/formElements/Input\";\r\nimport { useFrom } from \"../../shared/hooks/form-hook\";\r\nimport { VALIDATOR_REQUIRE } from \"../../shared/Util/validators\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Moment from \"react-moment\";\r\n\r\nimport \"./Comment.css\";\r\n\r\nexport default function Comment(props) {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const { _id, creator, comment, date } = props.comment;\r\n  const { sendRequest } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const hasRight =\r\n    creator && auth && auth.userId && creator._id === auth.userId;\r\n  const placeId = useParams().placeId;\r\n  const [state, inputHandler] = useFrom(\r\n    {\r\n      comment: {\r\n        value: comment,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const deleteComment = async () => {\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}/comments/${_id}`,\r\n        \"DELETE\",\r\n        null,\r\n        { Authorization: `Bearer ${auth.token}` }\r\n      );\r\n      props.removeComment(_id);\r\n    } catch {}\r\n  };\r\n\r\n  const editComment = () => {\r\n    setEditMode((currentMode) => !currentMode);\r\n  };\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    const handleIt = async () => {\r\n      try {\r\n        const comment = {\r\n          comment: state.inputs.comment.value,\r\n        };\r\n        await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}/comments/${_id}`,\r\n          \"PATCH\",\r\n          JSON.stringify(comment),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        props.updateComment(_id, comment);\r\n        setEditMode(false);\r\n      } catch (error) {}\r\n    };\r\n    handleIt();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {!editMode ? (\r\n        <div className=\"comment-container row\">\r\n          <div className=\"commenter-info\">\r\n            {creator && (\r\n              <img\r\n                src={creator.image}\r\n                alt={creator.name}\r\n                width=\"60\"\r\n                height=\"60\"\r\n              />\r\n            )}\r\n            <h4>{creator && creator.name}</h4>\r\n\r\n            <Moment className=\"date\" format=\"MMMM Do YYYY, h:mm:ss a\">\r\n              {date}\r\n            </Moment>\r\n          </div>\r\n\r\n          <div className=\"comments-holder\">\r\n            <p>{comment}</p>\r\n          </div>\r\n          <div className=\"btn-holder\">\r\n            {hasRight && (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={deleteComment}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                style={{ marginRight: \"10px\" }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n            {hasRight && (\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={editComment}\r\n                startIcon={<EditIcon />}\r\n                size=\"small\"\r\n              >\r\n                Edit\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"comment-container\">\r\n          <form className=\"comment-update-form\" onSubmit={submitHandler}>\r\n            <Input\r\n              id=\"comment\"\r\n              element=\"input\"\r\n              label=\"comment\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a valid message (min. 5 characters).\"\r\n              onInput={inputHandler}\r\n              initailValue={comment}\r\n              initailValid={true}\r\n            />\r\n\r\n            <Button\r\n              style={{ marginRight: \"10px\" }}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              type=\"submit\"\r\n              disabled={!state.isValid}\r\n            >\r\n              Update\r\n            </Button>\r\n\r\n            <Button\r\n              color=\"default\"\r\n              onClick={() => setEditMode(false)}\r\n              variant=\"contained\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Comment from './Comment';\r\nimport './CommentList.css';\r\nexport default function CommentList({\r\n  comments,\r\n  removeComment,\r\n  updateComment,\r\n}) {\r\n  return (\r\n    <div>\r\n      {comments && comments.length > 0 ? (\r\n        <React.Fragment>\r\n          <h5 className=\"comments-counter\">\r\n            <span>{comments.length}</span> Comment\r\n            {comments.length === 1 ? ' ' : 's'}\r\n          </h5>\r\n          {comments.map((comment) => (\r\n            <Comment\r\n              key={comment._id}\r\n              comment={comment}\r\n              removeComment={removeComment}\r\n              updateComment={updateComment}\r\n            />\r\n          ))}\r\n        </React.Fragment>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport CommentForm from \"../components/CommentForm\";\r\nimport CommentList from \"../components/CommentList\";\r\n\r\nexport default function Comments({ placeId }) {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [comments, setComments] = useState();\r\n\r\n  useEffect(() => {\r\n    const getComments = async () => {\r\n      try {\r\n        const commentsData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}/comments`\r\n        );\r\n        setComments(commentsData.comments);\r\n      } catch {}\r\n    };\r\n    getComments();\r\n  }, [placeId, sendRequest]);\r\n\r\n  const addComment = (comment) => {\r\n    setComments((currentComments) => [...currentComments, comment]);\r\n  };\r\n\r\n  const removeComment = (commentId) => {\r\n    setComments((currentComments) =>\r\n      currentComments.filter((comment) => comment._id !== commentId)\r\n    );\r\n  };\r\n\r\n  const updateComment = (id, comment) => {\r\n    setComments((currentComments) =>\r\n      currentComments.map((c) => {\r\n        if (c._id === id) {\r\n          const newComment = {\r\n            _id: id,\r\n            creator: { ...c.creator },\r\n            title: comment.title,\r\n            comment: comment.comment,\r\n          };\r\n          return newComment;\r\n        }\r\n        return c;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <LoadingSpinner />}\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <CommentForm addComment={addComment} placeId={placeId} />\r\n      {!isLoading && (\r\n        <CommentList\r\n          removeComment={removeComment}\r\n          updateComment={updateComment}\r\n          comments={comments}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./PlaceItem.css\";\r\nimport { Container, Card } from \"@material-ui/core\";\r\nconst PlaceItemView = (props) => {\r\n  const { name, image, title, address, description } = props.place;\r\n  return (\r\n    <Container>\r\n      <Card className=\"place-item-comment\">\r\n        <div className=\"place-item__image\">\r\n          <img src={image.imageUrl} alt={name} />\r\n        </div>\r\n        <div className=\"place-item__info\">\r\n          <h2>{title}</h2>\r\n          <h3>{address}</h3>\r\n          <p>{description}</p>\r\n        </div>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PlaceItemView;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Comments from './Comments';\r\nimport useHttpClient from '../../shared/hooks/http-hook';\r\nimport ErrorModal from '../../shared/component/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/component/UIElements/LoadingSpinner';\r\nimport PlaceItemView from '../components/PlaceItemView';\r\nimport './Place.css';\r\n\r\nexport default function Place() {\r\n  const [place, setPlace] = useState({});\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const placeId = useParams().placeId;\r\n\r\n  useEffect(() => {\r\n    const getPlace = async () => {\r\n      try {\r\n        const placeData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n        );\r\n        setPlace(placeData.place);\r\n      } catch {}\r\n    };\r\n    getPlace();\r\n  }, [sendRequest, placeId]);\r\n\r\n  return (\r\n    <div className=\"spinner-justify\">\r\n      {isLoading && <LoadingSpinner />}\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && place && Object.keys(place).length > 0 && (\r\n        <PlaceItemView place={place} />\r\n      )}\r\n      <Comments placeId={placeId} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = (props) => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${\r\n          props.inverse && 'button--inverse'\r\n        } ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${\r\n          props.inverse && 'button--inverse'\r\n        } ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${\r\n        props.inverse && 'button--inverse'\r\n      } ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n      id={props.id}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport Button from \"../formElements/Button\";\r\n\r\nconst ErrorModal = ({ error, onClear, header }) => {\r\n  return (\r\n    <Modal\r\n      onCancel={onClear}\r\n      header={header || \"An Error Occurred!!!\"}\r\n      show={!!error}\r\n      footer={<Button onClick={onClear}>Okay</Button>}\r\n    >\r\n      <div>{error}</div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Backdrop from \"./Backdrop\";\r\nconst Modal = props => {\r\n  return (\r\n    <Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames='modal'\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </Fragment>\r\n  );\r\n};\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={props.onSubmit ? props.onSubmit : e => e.preventDefault()}\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nexport default Modal;\r\n"],"sourceRoot":""}