{"version":3,"sources":["users/components/RegisterConfirmation.js","shared/component/formElements/Button.js","shared/component/UIElements/ErrorModal.js","shared/component/UIElements/Card.js","shared/component/UIElements/Modal.js"],"names":["RegisterConfirmation","token","useParams","useHttpClient","isLoading","error","sendRequest","clearError","useState","account","setAccount","useEffect","a","process","data","confirmAccount","onClear","asOverlay","className","message","to","Button","props","href","size","inverse","danger","children","exact","type","onClick","disabled","id","ErrorModal","header","onCancel","show","footer","Card","style","ModalOverlay","content","headerClass","onSubmit","e","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","in","mountOnEnter","unmountOnExit","timeout","classNames"],"mappings":"oRAyCeA,UAhCc,WAC3B,IAAMC,EAAQC,cAAYD,MADO,EAGqBE,cAA9CC,EAHyB,EAGzBA,UAAWC,EAHc,EAGdA,MAAOC,EAHO,EAGPA,YAAaC,EAHN,EAGMA,WAHN,EAIHC,qBAJG,mBAI1BC,EAJ0B,KAIjBC,EAJiB,KAkBjC,OAbAC,qBAAU,YACY,uCAAG,4BAAAC,EAAA,+EAEAN,EAAY,GAAD,OACzBO,wCADyB,0BAC0BZ,IAHrC,OAEba,EAFa,OAMnBJ,EAAWI,GANQ,uGAAH,qDASpBC,KACC,CAACd,EAAOK,IAGT,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAYD,MAAOA,EAAOW,QAAST,IAClCH,GAAa,kBAAC,IAAD,CAAgBa,WAAS,IACtCR,GACC,kBAAC,IAAD,CAAMS,UAAU,mBACd,2BAAIT,EAAQU,SACZ,kBAAC,IAAD,CAAQC,GAAG,SAAX,oB,gCClCV,kCA8CeC,IAzCA,SAACC,GACd,OAAIA,EAAMC,KAEN,uBACEL,UAAS,yBAAoBI,EAAME,MAAQ,UAAlC,YACPF,EAAMG,SAAW,kBADV,YAELH,EAAMI,QAAU,kBACpBH,KAAMD,EAAMC,MAEXD,EAAMK,UAITL,EAAMF,GAEN,kBAAC,IAAD,CACEA,GAAIE,EAAMF,GACVQ,MAAON,EAAMM,MACbV,UAAS,yBAAoBI,EAAME,MAAQ,UAAlC,YACPF,EAAMG,SAAW,kBADV,YAELH,EAAMI,QAAU,mBAEnBJ,EAAMK,UAKX,4BACET,UAAS,yBAAoBI,EAAME,MAAQ,UAAlC,YACPF,EAAMG,SAAW,kBADV,YAELH,EAAMI,QAAU,kBACpBG,KAAMP,EAAMO,KACZC,QAASR,EAAMQ,QACfC,SAAUT,EAAMS,SAChBC,GAAIV,EAAMU,IAETV,EAAMK,Y,gCCzCb,oCAkBeM,IAbI,SAAC,GAAgC,IAA9B5B,EAA6B,EAA7BA,MAAOW,EAAsB,EAAtBA,QAASkB,EAAa,EAAbA,OACpC,OACE,kBAAC,IAAD,CACEC,SAAUnB,EACVkB,OAAQA,GAAU,uBAClBE,OAAQ/B,EACRgC,OAAQ,kBAAC,IAAD,CAAQP,QAASd,GAAjB,SAER,6BAAMX,M,gCCbZ,2BAYeiC,IARF,SAAAhB,GACX,OACE,yBAAKJ,UAAS,eAAUI,EAAMJ,WAAaqB,MAAOjB,EAAMiB,OACrDjB,EAAMK,Y,gCCPb,8DAqBMa,EAAe,SAAAlB,GACnB,IAAMmB,EACJ,yBAAKvB,UAAS,gBAAWI,EAAMJ,WAAaqB,MAAOjB,EAAMiB,OACvD,4BAAQrB,UAAS,wBAAmBI,EAAMoB,cACxC,4BAAKpB,EAAMY,SAEb,0BACES,SAAUrB,EAAMqB,SAAWrB,EAAMqB,SAAW,SAAAC,GAAC,OAAIA,EAAEC,mBAEnD,yBAAK3B,UAAS,yBAAoBI,EAAMwB,eACrCxB,EAAMK,UAET,4BAAQT,UAAS,wBAAmBI,EAAMyB,cACvCzB,EAAMe,UAKf,OAAOW,IAASC,aAAaR,EAASS,SAASC,eAAe,gBAGjDC,IArCD,SAAA9B,GACZ,OACE,kBAAC,WAAD,KACGA,EAAMc,MAAQ,kBAAC,IAAD,CAAUN,QAASR,EAAMa,WACxC,kBAAC,IAAD,CACEkB,GAAI/B,EAAMc,KACVkB,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,SAEX,kBAACjB,EAAiBlB","file":"static/js/17.471f2dc3.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Card from \"../../shared/component/UIElements/Card\";\r\n\r\nimport Button from \"../../shared/component/formElements/Button\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\n\r\nconst RegisterConfirmation = () => {\r\n  const token = useParams().token;\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [account, setAccount] = useState();\r\n  useEffect(() => {\r\n    const confirmAccount = async () => {\r\n      try {\r\n        const data = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/confirm/${token}`\r\n        );\r\n\r\n        setAccount(data);\r\n      } catch (error) {}\r\n    };\r\n    confirmAccount();\r\n  }, [token, sendRequest]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      {account && (\r\n        <Card className=\"forget_password\">\r\n          <p>{account.message}</p>\r\n          <Button to=\"/auth\">AUTHENTICATE</Button>\r\n        </Card>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RegisterConfirmation;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = (props) => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${\r\n          props.inverse && 'button--inverse'\r\n        } ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${\r\n          props.inverse && 'button--inverse'\r\n        } ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${\r\n        props.inverse && 'button--inverse'\r\n      } ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n      id={props.id}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport Button from \"../formElements/Button\";\r\n\r\nconst ErrorModal = ({ error, onClear, header }) => {\r\n  return (\r\n    <Modal\r\n      onCancel={onClear}\r\n      header={header || \"An Error Occurred!!!\"}\r\n      show={!!error}\r\n      footer={<Button onClick={onClear}>Okay</Button>}\r\n    >\r\n      <div>{error}</div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Backdrop from \"./Backdrop\";\r\nconst Modal = props => {\r\n  return (\r\n    <Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames='modal'\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </Fragment>\r\n  );\r\n};\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={props.onSubmit ? props.onSubmit : e => e.preventDefault()}\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nexport default Modal;\r\n"],"sourceRoot":""}